server.port=8081
server.servlet.context-path=/bcbpm
student.name=jacky
student.state=sick

## 首选用于HTTP消息转换的JSON映射程序
#spring.http.converters.preferred-json-mapper=jackson



#-------------------------------------------------------------------------mysql  start------------------------------------------------------------------------
#spring.datasource.url=jdbc:mysql://localhost:3306/bcbpm?zeroDateTimeBehavior=convertToNull&amp;useUnicode=true&amp;characterEncoding=utf-8
#spring.datasource.username=root
#spring.datasource.password=123456
#指定数据库连接池的类型
##spring.datasource.type=org.apache.commons.dbcp2.BasicDataSource
#spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
##数据库连接池的最小维持连接数   
#spring.datasource.dbcp2.min-idle=5
##最大等待连接中的数量，设0为没有限制
#spring.datasource.dbcp2.max-idle=10
##最大活动连接数
#spring.datasource.dbcp2.max-total=50
##最大等待毫秒数，单位为ms，超过时间会出错误信息
#spring.datasource.dbcp2.max-wait-millis=10000
##数据库连接池初始化连接数
#spring.datasource.dbcp2.initial-size=5

 #the first datasource
jdbc.driverClassName = com.mysql.jdbc.Driver
jdbc.url=jdbc:mysql://127.0.0.1:3306/bcbpm?zeroDateTimeBehavior=convertToNull&amp;useUnicode=true&amp;characterEncoding=utf-8
jdbc.username=root
jdbc.password=123456


 #the second datasource
jdbc2.driverClassName = com.mysql.jdbc.Driver
jdbc2.url=jdbc:mysql://127.0.0.1:3306/bcbpm?zeroDateTimeBehavior=convertToNull&amp;useUnicode=true&amp;characterEncoding=utf-8
jdbc2.username=root
jdbc2.password=123456

spring.datasource.initialize=false
#-------------------------------------------------------------------------mysql  end------------------------------------------------------------------------


#-------------------------------------------------------------------------mybatis  start------------------------------------------------------------------------
#MyBatis 映射文件通配
mybatis.mapper-locations=classpath:com/bcbpm/dao/*/mapper/*.xml
#MyBatis 扫描包别名，和注解@Alias联用
mybatis.type-aliases-package=com.bcbpm.model
#配置typeHandler的扫描包
#mybatis.type-handlers-package=com.springboot.chapter5.typehandler
#-------------------------------------------------------------------------mybatis  end------------------------------------------------------------------------


#-------------------------------------------------------------------------hibernate  start------------------------------------------------------------------------

#hibernate.dialect=org.hibernate.dialect.MySQLDialect
#-------------------------------------------------------------------------hibernate  end------------------------------------------------------------------------




logging.level.org.springframework.web=debug
logging.level.org.springframework.transaction=debug
logging.level.org.mybatis=debug
logging.level.java.sql.Connection=debug
logging.level.java.sql.Statement=debug
logging.level.java.sql.PreparedStatement=debug
logging.level.java.sql.ResultSet=debug
logging.level.com.bcbpm.dao=debug


#-------------------------------------------------------------------------redis  start------------------------------------------------------------------------
#redis 启动模式 0 单机  1 集群 
spring.redis.mode=0

spring.redis.host=127.0.0.1
spring.redis.port=6379
spring.redis.auth=12hksqj34
spring.redis.commandTimeout=5
spring.redis.expireSeconds=120

# 集群序列
spring.redis.clusterNodes=192.168.0.105:6379,192.168.0.104:6380,192.168.0.104:6379,192.168.0.103:6380,192.168.0.103:6379,192.168.0.105:6380
# 默认集群连接超时时间
spring.redis.clusterConnectTimeout=10000
#返回值的超时时间
spring.redis.clusterSoTimeout=3000
#出现异常最大尝试次数
spring.redis.clusterMaxAttempts=5
#认证密码
spring.redis.clusterAuth=12hksqj34

#-------------------------------------------------------------------------redis  end------------------------------------------------------------------------

#-------------------------------------------------------------------------activiti  start------------------------------------------------------------------------
#启动报错class path resource [processes/] cannot be resolved to URL because it does not exist
# 自动部署验证设置:true-开启（默认）、false-关闭
spring.activiti.check-process-definitions=false
# asyncExecutorEnabled属性设置设置true后将代替那些老的Job executor
spring.activiti.async-executor-enabled=false 
spring.activiti.job-executor-activate=false
# asyncExecutorActivate是指activiti在流程引擎启动就激活AsyncExecutor,异步：true-开启（默认）、false-关闭
spring.activiti.async-executor-activate=true
#-------------------------------------------------------------------------activiti  end------------------------------------------------------------------------

spring.liquibase.enabled=false
#spring.liquibase.change-log=classpath:/META-INF/liquibase/activiti-app-db-changelog.xml

#-------------------------------------------------------------------------log  start------------------------------------------------------------------------
#在控制台输出彩色日志
#spring.output.ansi.enabled\=always
#在application.properties文件中引入日志配置文件  
logging.config=classpath\:logback-boot.xml
#-------------------------------------------------------------------------log  end------------------------------------------------------------------------

#spring.mvc.static-path-pattern=/**